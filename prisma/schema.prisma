// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  name       String
  password   String
  role       Role      @default(ADMIN)
  is_active  Boolean   @default(true)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  id_proyek  Int?
  proyek     Proyek?   @relation(fields: [id_proyek], references: [id])
  laporan    Laporan[]
  Absence    Absence[]
}

model Proyek {
  id               Int                @id @default(autoincrement())
  user             User[]
  nama             String
  kode             String             @unique
  tanggal          DateTime
  created_at       DateTime           @default(now())
  updated_at       DateTime           @updatedAt
  lokasi           String             @db.Text
  notes            String             @db.Text
  is_active        Boolean            @default(true)
  bidang_pekerjaan Bidang_Pekerjaan[]
}

model Bidang_Pekerjaan {
  id         Int         @id @default(autoincrement())
  nama       String
  kode       String      @unique
  id_proyek  Int
  proyek     Proyek      @relation(fields: [id_proyek], references: [id])
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  notes      String      @db.Text
  is_active  Boolean     @default(true)
  pekerjaan  Pekerjaan[]
  laporan    Laporan[]
}

model Pekerjaan {
  id                  Int              @id @default(autoincrement())
  id_bidang_pekerjaan Int
  bidang_pekerjaan    Bidang_Pekerjaan @relation(fields: [id_bidang_pekerjaan], references: [id])
  nama                String
  is_active           Boolean          @default(true)
  notes               String           @db.Text
  created_at          DateTime         @default(now())
  updated_at          DateTime         @updatedAt
  sub_pekerjaan       Sub_Pekerjaan[]
}

model Sub_Pekerjaan {
  id             Int              @id @default(autoincrement())
  id_pekerjaan   Int
  pekerjaan      Pekerjaan        @relation(fields: [id_pekerjaan], references: [id])
  nama           String
  notes          String           @db.Text
  target_volume  Float
  bobot          Float?
  is_active      Boolean          @default(true)
  id_satuan      Int
  satuan         Satuan           @relation(fields: [id_satuan], references: [id])
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  laporan_harian Laporan_Harian[]
}

model Satuan {
  id            Int             @id @default(autoincrement())
  nama          String
  created_at    DateTime        @default(now())
  sub_pekerjaan Sub_Pekerjaan[]
}

model Laporan_Harian {
  id               Int           @id @default(autoincrement())
  id_sub_pekerjaan Int
  sub_pekerjaan    Sub_Pekerjaan @relation(fields: [id_sub_pekerjaan], references: [id])
  volume           Float
  notes            String        @db.Text
  created_at       DateTime      @default(now())
  updated_at       DateTime      @updatedAt
  file_url         String
  id_laporan       Int
  laporan          Laporan       @relation(fields: [id_laporan], references: [id])
}

model Laporan {
  id                  Int              @id @default(autoincrement())
  user                User             @relation(fields: [id_user], references: [id])
  id_user             Int
  notes               String           @db.Text
  id_bidang_pekerjaan Int
  bidang_pekerjaan    Bidang_Pekerjaan @relation(fields: [id_bidang_pekerjaan], references: [id])
  created_at          DateTime         @default(now())
  updated_at          DateTime         @updatedAt
  laporan_harian      Laporan_Harian[]
}

model Absence {
  id                 Int       @id @default(autoincrement())
  user               User      @relation(fields: [id_user], references: [id])
  id_user            Int
  clock_in_file_url  String
  clock_out_file_url String?
  created_at         DateTime  @default(now())
  updated_at         DateTime  @updatedAt
  clock_out_at       DateTime?
  pose               Int?
}
